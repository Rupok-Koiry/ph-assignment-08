// schema.prisma

generator client {
  provider = "prisma-client-js" // Generates Prisma Client for database access
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // Connection string from environment variable
}

// Represents a book in the library
model Book {
  bookId           String     @id @default(uuid())
  title            String
  genre            String
  publishedYear    Int
  totalCopies      Int
  availableCopies  Int

  // Associated borrow records
  borrowRecords    BorrowRecord[]
}

// Represents a library member
model Member {
  memberId         String     @id @default(uuid())
  name             String
  email            String     @unique
  phone            String
  membershipDate   DateTime   @default(now())

  // Associated borrow records
  borrowRecords    BorrowRecord[]
}

// Tracks book borrow and return details
model BorrowRecord {
  borrowId     String    @id @default(uuid())
  borrowDate   DateTime  @default(now())
  returnDate   DateTime?

  // Foreign keys and relationships
  bookId       String
  memberId     String
  book         Book      @relation(fields: [bookId], references: [bookId])
  member       Member    @relation(fields: [memberId], references: [memberId])

  @@index([bookId])
  @@index([memberId])
}
